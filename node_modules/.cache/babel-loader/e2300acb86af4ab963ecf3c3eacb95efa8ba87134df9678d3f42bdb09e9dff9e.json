{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajgavini/Desktop/Personal Projects/SpatialLaser/demographic-harvesting-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './App.css'; // Include your CSS file if you have one\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const [bufferDistance, setBufferDistance] = useState(0);\n  useEffect(() => {\n    // Setting up the map\n    const map = L.map('map').setView([43.70, -79.42], 10);\n\n    // Adding OpenStreetMap tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n    }).addTo(map);\n\n    // Adding a marker for selected point (if any)\n    if (selectedPoint) {\n      L.marker(selectedPoint).addTo(map);\n    }\n\n    // Handling map click event\n    const onMapClick = e => {\n      setSelectedPoint([e.latlng.lat, e.latlng.lng]);\n    };\n    map.on('click', onMapClick);\n\n    // Clean up on component unmount\n    return () => {\n      map.remove();\n    };\n  }, [selectedPoint]);\n  const handleBufferDistanceChange = e => {\n    setBufferDistance(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select a Point:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), selectedPoint && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" Latitude: \", selectedPoint[0], \", Longitude: \", selectedPoint[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Buffer Distance (in meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: bufferDistance,\n        onChange: handleBufferDistanceChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gdrdSBdjB234K53/qm58wx/Pnos=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","L","jsxDEV","_jsxDEV","App","_s","selectedPoint","setSelectedPoint","bufferDistance","setBufferDistance","map","setView","tileLayer","maxZoom","attribution","addTo","marker","onMapClick","e","latlng","lat","lng","on","remove","handleBufferDistanceChange","target","value","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/dheerajgavini/Desktop/Personal Projects/SpatialLaser/demographic-harvesting-frontend/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport './App.css'; // Include your CSS file if you have one\n\nconst App = () => {\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const [bufferDistance, setBufferDistance] = useState(0);\n\n  useEffect(() => {\n    // Setting up the map\n    const map = L.map('map').setView([43.70, -79.42], 10);\n\n    // Adding OpenStreetMap tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n    }).addTo(map);\n\n    // Adding a marker for selected point (if any)\n    if (selectedPoint) {\n      L.marker(selectedPoint).addTo(map);\n    }\n\n    // Handling map click event\n    const onMapClick = (e) => {\n      setSelectedPoint([e.latlng.lat, e.latlng.lng]);\n    };\n\n    map.on('click', onMapClick);\n\n    // Clean up on component unmount\n    return () => {\n      map.remove();\n    };\n  }, [selectedPoint]);\n\n  const handleBufferDistanceChange = (e) => {\n    setBufferDistance(e.target.value);\n  };\n\n  return (\n    <div>\n      <div id=\"map\" className=\"map\"></div>\n      <div>\n        <label>Select a Point:</label>\n        {selectedPoint && <span> Latitude: {selectedPoint[0]}, Longitude: {selectedPoint[1]}</span>}\n      </div>\n      <div>\n        <label>Buffer Distance (in meters):</label>\n        <input type=\"number\" value={bufferDistance} onChange={handleBufferDistanceChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}